name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  install-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install SSHpass
        run: sudo apt-get install -y sshpass

      - name: Check if Runner is Already Installed
        id: check-runner
        run: |
          if sshpass -p ${{ secrets.SSH_PRIVATE_KEY }} ssh -o StrictHostKeyChecking=no ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} '[ -d "${{ secrets.RUNNER_PATH }}" ]'; then
            echo "Runner is already installed."
            echo "runner_installed=true" >> $GITHUB_OUTPUT
          else
            echo "Runner is not installed."
            echo "runner_installed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install the Runner
        if: steps.check-runner.outputs.runner_installed == 'false'
        run: |
          sshpass -p ${{ secrets.SSH_PRIVATE_KEY }} ssh -o StrictHostKeyChecking=no ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} '
          mkdir ${{ secrets.RUNNER_PATH }} && cd ${{ secrets.RUNNER_PATH }}
          curl -o actions-runner-linux-x64-2.322.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.322.0/actions-runner-linux-x64-2.322.0.tar.gz
          echo "${{ secrets.RUNNER_ACCOUNT_TOKEN }}  actions-runner-linux-x64-2.322.0.tar.gz" | shasum -a 256 -c
          tar xzf ./actions-runner-linux-x64-2.322.0.tar.gz
          echo -e "\n\n\n\n" | ./config.sh --url https://github.com/Gabrieltrinidad0101 --token ${{ secrets.RUNNER_TOKEN }}
          echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S ./svc.sh install
          echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S ./svc.sh start
          '

  install-docker:
    runs-on: self-hosted
    steps:
      - name: rm nginx folder
        run: |
          echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S rm -rf  /home/administrator/actions-runner/_work/nginx

      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Install Docker
        continue-on-error: true
        run: |
          echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S snap install docker
      
      - name: Create Network
        continue-on-error: true
        run: |
          echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S docker network create docker-network
      
      - name: env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD" >> .env
        env:
          MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}

      - name: Run Containers
        run: |
          echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S docker compose up -d --build
